Querying Relational Databases

Steps in Creating and Using a (Relational) Database

		1. Design the schema of the database and then create the schema using a DDL.
		2. Load the database with initial data. Data can be loaded from outside source
		   or manually via the INSERT command.
		3. Once database is loaded, we can start querying and modifying the data.
		
		
Relational Databases Support Ad-hoc Queries In High Level Languages

		- Ad-hoc: You can pose queries that you didn't think of in advance. Not 
		          necessary to write long programs for specific queries. Rather, 
				  the language can be used to pose a query.
				  
		- Examples of problems that need to be queried using students / colleges tables:
		
			1. Find all students with GPA > 3.7 applying to only Stanford and MIT.
			2. Find all engineering departments in CA with < 500 applicants.
			3. Find all colleges with the highest average acceptance rate over the 
			   last 5 years.
			   
		- SQL makes these queries easy to understand and execute.
		
		
Query Languages

		Example Problem: Find all IDs of students with GPA > 3.7 applying to Stanford.

		1. Relational Algebra (Formal Language)
			(Pi)(id) (Sigma)(gpa) > 3.7 AND collegeName = 'Stanford'(Student Join Apply)
		
		2. SQL (Structured Query Language)
			SELECT student.id
			FROM students, apply
			WHERE gpa > 3.7 AND student.id = apply.id AND college = 'Stanford';