Introduction:

1. Databases are used to store information because they are:

		- Massive
			- Can be terabytes of memory
			
		- Persistent
			- The data outlives the program that executes on that data
			- The program runs, creates data, the program stops, data continues to exist
			
		- Safe
			- Database systems have to have a guarantee that the data managed by these systems
			  will stay in a consistent state and won't be lost for whatever hardware or software-
			  related failures. Data must remain consistent regardless of what happens.
			  
		- Mult-user
			- Concurrency control is set in place to control how multiple users access the db. This
			  is done at the level of data items in db. They must be operating on different data items.
			  
		- Convenient
			- Easy to work with large amounts of data.
			- Physical data independence: the way the data is stored is independed from the way programs
			  "think" about the data. Operations on data is independent to how the data is structured.
			- High level query language
			
		- Efficient
			- Can do thousands of queries per second.
			
		- Reliable
			- 99.99999% uptime
		
		
2. Databases can work / interact with various frameworks:

		- Django, Ruby on Rails, Express.js, Web2Py, etc.
		
		
3. Key Concepts:

		- Data Model
			- Description of how the data is structured.
			- In a relational data model, the data in a database is thought of as a set of records.
		
		- Schema vs. Data
			- Schema is basically a blueprint of how data is stored. Consider schema a type
			  and data a variable in terms of programming. 
			- Schema is basically setting up the structure of a database.
			- Data changes rapidly while the schema does not.
		
		- Data Definition Language (DDL)
			- What is used to set up the schema for a database.
		
		- Data Manipulation or Query Language (DML)
			- Once schema is set with DDL, the database is ready to be queried / modified with DML.
			
			
4. Key Personel Involed In DBMS

		- DBMS Implementer
			- Builds system
		
		- Database Designer
			- Analyzes the requirements. Designs the system. Establishes the schema / structure.
		
		- Database Application Developer
			- Builds the apps or programs that are going to run on database (often interfacing between 
			  user and data).
		
		- Database Administrator
			- Reponsible for loading the data.
			- Responsible for maintaining the database. Important for massive databases.